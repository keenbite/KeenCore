name: Windows x64 Release Build (MSVC)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  MYSQL_DIR: 'C:\\Program Files\\MySQL\\MySQL Server 5.7'
  OPENSSL_DIR: 'C:\\Program Files\\OpenSSL-Win64'
  ACE_DIR: 'C:\\tools\\ACE_wrappers'
  OPENSSL_USE_STATIC_LIBS: FALSE

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies via Chocolatey (ohne Visual Studio)
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        choco install ninja -y
        choco install python -y
        choco install git -y
        choco install mysql --version=5.7.40 -y
        choco install openssl --version=1.1.1n -y
        choco install ace -y

    - name: Configure CMake (Visual Studio 2022 x64)
      run: |
        cmake -S . -B build -G "Visual Studio 17 2022" -A x64 `
          -DCMAKE_BUILD_TYPE=Release `
          -DMYSQL_INCLUDE_DIR="${{ env.MYSQL_DIR }}\\include" `
          -DMYSQL_LIBRARY="${{ env.MYSQL_DIR }}\\lib\\libmysql.lib" `
          -DOPENSSL_ROOT_DIR="${{ env.OPENSSL_DIR }}" `
          -DOPENSSL_INCLUDE_DIR="${{ env.OPENSSL_DIR }}\\include" `
          -DOPENSSL_CRYPTO_LIBRARY="${{ env.OPENSSL_DIR }}\\lib\\libcrypto.lib" `
          -DOPENSSL_SSL_LIBRARY="${{ env.OPENSSL_DIR }}\\lib\\libssl.lib" `
          -DACE_ROOT="${{ env.ACE_DIR }}"

    - name: Build project (Release)
      run: cmake --build build --config Release

    - name: Copy OpenSSL DLLs to build directory
      run: |
        Copy-Item "${{ env.OPENSSL_DIR }}\\bin\\libcrypto-1_1-x64.dll" -Destination build\\Release -Force
        Copy-Item "${{ env.OPENSSL_DIR }}\\bin\\libssl-1_1-x64.dll" -Destination build\\Release -Force

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: KeenCore-Windows-Binaries-Release
        path: build/Release/*.exe
